{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\React\\\\react_staging\\\\src\\\\components\\\\Search\\\\index.jsx\";\nimport React, { Component } from \"react\"; // import axios from 'axios'\n\nimport PubSub from 'pubsub-js';\nexport default class Search extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.search = async () => {\n      //获取用户的输入(连续解构赋值+重命名)\n      const {\n        keyWordElement: {\n          value: keyWord\n        }\n      } = this; //keyWordElement没有创建\n      //发送请求前通知List更新状态\n\n      PubSub.publish('atguigu', {\n        isFirst: false,\n        isLoading: true\n      }); //#region  发送网络请求---使用axios\n\n      /* axios.get(`/api1/search/users?q=${keyWord}`).then(\r\n        response => {\r\n          //请求成功后通知List更新状态\r\n          PubSub.publish('atguigu',{isLoading:false,users:response.data.items})\r\n        },\r\n        error => {\r\n          //请求失败后通知List更新状态\r\n          PubSub.publish('atguigu',{isLoading:false,err:error.message})\r\n        }\r\n      ) */\n      //#endregion\n      //#region 发送网络请求---使用fetch发送(未优化)\n\n      /* fetch(`/api1/search/users?q=${keyWord}`).then(\r\n        response => {\r\n          console.log('联系服务器成功');\r\n          return response.json()\r\n        },\r\n        error => {\r\n          console.log('联系服务器失败',error);\r\n          return new Promise(()=>{})\r\n        }\r\n      ).then(\r\n        response => {console.log('获取数据成功了',response);},\r\n        error => {console.log('获取数据失败了',error);}\r\n      )*/\n      //#endregion\n      //#region 发送网络请求---使用fetch发送(优化)\n\n      /* fetch(`/api1/search/users?q=${keyWord}`).then(\r\n        response => {\r\n          console.log('联系服务器成功');\r\n          return response.json()\r\n        }\r\n      ).then(\r\n        response => {console.log('获取数据成功了',response);}\r\n      ).catch(\r\n        error=>{console.log('请求出错',error);}\r\n      ) */\n      //#endregion\n      //#region 发送网络请求---使用fetch发送(完全优化)\n      //await 需要在异步函数内调用,故search=async()=>{}\n\n      try {\n        const response = await fetch(`/api1/search/users2?q=${keyWord}`);\n        const data = await response.json();\n        PubSub.publish('atguigu', {\n          isLoading: false,\n          users: data.items\n        });\n      } catch (error) {\n        console.log('请求出错', error);\n        PubSub.publish('atguigu', {\n          isLoading: false,\n          err: error.message\n        });\n      } //#endregion\n\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"jumbotron\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"jumbotron-heading\",\n        children: \"\\u641C\\u7D22GitHub\\u7528\\u6237\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: c => this.keyWordElement = c,\n          type: \"text\",\n          placeholder: \"\\u8F93\\u5165\\u5173\\u952E\\u5B57\\u70B9\\u51FB\\u641C\\u7D22\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.search,\n          children: \"\\u641C\\u7D22\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["E:/React/react_staging/src/components/Search/index.jsx"],"names":["React","Component","PubSub","Search","search","keyWordElement","value","keyWord","publish","isFirst","isLoading","response","fetch","data","json","users","items","error","console","log","err","message","render","c"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,eAAe,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAE5CG,MAF4C,GAErC,YAAS;AACd;AACA,YAAM;AAACC,QAAAA,cAAc,EAAC;AAACC,UAAAA,KAAK,EAACC;AAAP;AAAhB,UAAmC,IAAzC,CAFc,CAEgC;AAC9C;;AACAL,MAAAA,MAAM,CAACM,OAAP,CAAe,SAAf,EAAyB;AAACC,QAAAA,OAAO,EAAC,KAAT;AAAeC,QAAAA,SAAS,EAAC;AAAzB,OAAzB,EAJc,CAKd;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AAEA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AAEA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AAEA;AACA;;AACA,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,yBAAwBL,OAAQ,EAAlC,CAA5B;AACA,cAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAZ,QAAAA,MAAM,CAACM,OAAP,CAAe,SAAf,EAAyB;AAACE,UAAAA,SAAS,EAAC,KAAX;AAAiBK,UAAAA,KAAK,EAACF,IAAI,CAACG;AAA5B,SAAzB;AACD,OAJD,CAIE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBF,KAAnB;AACAf,QAAAA,MAAM,CAACM,OAAP,CAAe,SAAf,EAAyB;AAACE,UAAAA,SAAS,EAAC,KAAX;AAAiBU,UAAAA,GAAG,EAACH,KAAK,CAACI;AAA3B,SAAzB;AACD,OAxDa,CAyDd;;AACD,KA5D2C;AAAA;;AA8D5CC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCACE;AAAO,UAAA,GAAG,EAAEC,CAAC,IAAE,KAAKlB,cAAL,GAAoBkB,CAAnC;AAAuC,UAAA,IAAI,EAAC,MAA5C;AAAmD,UAAA,WAAW,EAAC;AAA/D;AAAA;AAAA;AAAA;AAAA,gBADF,uBAGE;AAAQ,UAAA,OAAO,EAAE,KAAKnB,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAzE2C","sourcesContent":["import React, { Component } from \"react\";\r\n// import axios from 'axios'\r\nimport PubSub from 'pubsub-js'\r\nexport default class Search extends Component {\r\n\r\n  search=async()=>{\r\n    //获取用户的输入(连续解构赋值+重命名)\r\n    const {keyWordElement:{value:keyWord}} = this //keyWordElement没有创建\r\n    //发送请求前通知List更新状态\r\n    PubSub.publish('atguigu',{isFirst:false,isLoading:true})\r\n    //#region  发送网络请求---使用axios\r\n    /* axios.get(`/api1/search/users?q=${keyWord}`).then(\r\n      response => {\r\n        //请求成功后通知List更新状态\r\n        PubSub.publish('atguigu',{isLoading:false,users:response.data.items})\r\n      },\r\n      error => {\r\n        //请求失败后通知List更新状态\r\n        PubSub.publish('atguigu',{isLoading:false,err:error.message})\r\n      }\r\n    ) */\r\n    //#endregion\r\n\r\n    //#region 发送网络请求---使用fetch发送(未优化)\r\n    /* fetch(`/api1/search/users?q=${keyWord}`).then(\r\n      response => {\r\n        console.log('联系服务器成功');\r\n        return response.json()\r\n      },\r\n      error => {\r\n        console.log('联系服务器失败',error);\r\n        return new Promise(()=>{})\r\n      }\r\n    ).then(\r\n      response => {console.log('获取数据成功了',response);},\r\n      error => {console.log('获取数据失败了',error);}\r\n    )*/\r\n    //#endregion\r\n\r\n    //#region 发送网络请求---使用fetch发送(优化)\r\n    /* fetch(`/api1/search/users?q=${keyWord}`).then(\r\n      response => {\r\n        console.log('联系服务器成功');\r\n        return response.json()\r\n      }\r\n    ).then(\r\n      response => {console.log('获取数据成功了',response);}\r\n    ).catch(\r\n      error=>{console.log('请求出错',error);}\r\n    ) */\r\n    //#endregion\r\n\r\n    //#region 发送网络请求---使用fetch发送(完全优化)\r\n    //await 需要在异步函数内调用,故search=async()=>{}\r\n    try {\r\n      const response = await fetch(`/api1/search/users2?q=${keyWord}`)\r\n      const data = await response.json()\r\n      PubSub.publish('atguigu',{isLoading:false,users:data.items})\r\n    } catch (error) {\r\n      console.log('请求出错',error);\r\n      PubSub.publish('atguigu',{isLoading:false,err:error.message})\r\n    }\r\n    //#endregion\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <section className=\"jumbotron\">\r\n        <h3 className=\"jumbotron-heading\">搜索GitHub用户</h3>\r\n        <div>\r\n          <input ref={c=>this.keyWordElement=c}  type=\"text\" placeholder=\"输入关键字点击搜索\" />\r\n          &nbsp;\r\n          <button onClick={this.search}>搜索</button>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}